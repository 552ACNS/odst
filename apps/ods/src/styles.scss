@use '@angular/material' as mat;
@import '~@angular/material/theming';

@tailwind base;
@tailwind components;
@tailwind utilities;

$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$error-color: mat.define-palette(mat.$red-palette);

// Define a light theme

$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      error: $error-color,
    ),
  )
);

@include mat.all-component-themes($light-theme);

.text-link-color {
  color: mat.get-color-from-palette($light-primary, 'text');
}

// Apply the dark theme if someone's machine prefers it
@media (prefers-color-scheme: dark) {
  $dark-primary: mat.define-palette(mat.$teal-palette);
  $dark-accent: mat.define-palette(mat.$blue-gray-palette);

  .text-link-color {
    color: mat.get-color-from-palette($dark-primary, 'text');
  }

  // Define a dark theme
  $dark-theme: mat.define-dark-theme(
    (
      color: (
        primary: $dark-primary,
        accent: $dark-accent,
        error: $error-color,
      ),
    )
  );

  @include mat.all-component-colors($dark-theme);
}

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

// declares a parent-div attribute that can be reused in multiple places
.parent-div {
  @apply container mx-auto min-w-[360px] w-[50%] max-w-[500px] mt-6;
}

.primary-text-contrast {
  background-color: mat-color($light-primary);
  color: mat.get-color-from-palette($light-primary, '500-contrast');
}

.error-text {
  color: mat-color($error-color);
}

@layer base {
  .mat-card {
    // Need to wrap important in SASS interpolation to work with Tailwind
    @apply rounded-2xl shadow-md #{!important};
  }
}
