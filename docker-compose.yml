# Downgraded to 3.7 to ensure it works with non-docker desktop
version: '3.7'

#TODO reuse environment variables (i.e. so database password isn't hardcoded in three different spots)
#TODO figure out how platform team wants to handle environetment variables (like .env.prod)
#TODO add more stuff to be dynamically set - db info, ports, etc

services:
  postgres:
    container_name: postgres
    image: registry1.dso.mil/ironbank/opensource/postgres/postgresql12:latest
    restart: unless-stopped
    volumes:
      - postgres-vol:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - odst-network

  ods-api:
    container_name: ods-api
    image: ghcr.io/552acns/odst/ods-api:latest
    ports:
      - '${BACKEND_PORT}:3343'
    environment:
      - NX_DATABASE_URL=${DATABASE_PROTOCOL}://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABSE_PORT}/${DATABASE_NAME}
      - NX_CHECKPOINT_DISABLE=${BACKEND_CHECKPOINT_DISABLE}
      - NX_JWT_SECRET=${BACKEND_JWT_SECRET}
      - NX_JWT_REFRESH_SECRET=${BACKEND_JWT_REFRESH_SECRET}
      #TODO if this isn't set, don't create admin account. Or require it, so it can never be unset.
      - NX_DEV_ACCOUNT_PASSWORD=${BACKEND_ACCOUNT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - odst-network

  ods:
    container_name: ods
    image: ghcr.io/552acns/odst/ods:latest
    environment:
      - NX_GQL_ENDPOINT=http://${BACKEND_HOST}:${BACKEND_PORT}/graphql
    ports:
      - '${FRONTEND_PORT}:80'
    depends_on:
      - ods-api
    networks:
      - odst-network

  ods-migrate:
    container_name: ods-migrate
    image: ghcr.io/552acns/odst/ods-migrate:latest
    #env vars need to be specified in assets/env.template.js
    environment:
      - NX_DATABASE_URL=${DATABASE_PROTOCOL}://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABSE_PORT}/${DATABASE_NAME}
      - production=true
    depends_on:
      - postgres
    networks:
      - odst-network

networks:
  odst-network:

volumes:
  postgres-vol:
