name: CI
on:
  push:
    branches:
      - master
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: false

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [master]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile --prefer-offline
      - run: yarn audit
  pr:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'pull_request' }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ods_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: H@CK3YITPL3ASE
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: master
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile --prefer-offline
      # # - name: Setup .NET 6.x
      # #   uses: actions/setup-dotnet@v1
      # #   with:
      # #     # Semantic version range syntax or exact version of a dotnet version
      # #     dotnet-version: '6.x'
      - run: yarn nx affected --target=lint --parallel
      # # - run: yarn nx affected --target=test  --codeCoverage=true --coverageReporters=cobertura --parallel
      - run: yarn nx affected --target=test --parallel

      # TODO: Only e2e test affected modules
      - name: Migrate postgres database
        run: yarn nx run ods-api:prisma-migrate --skip-generate
      - name: start the backend
        run: yarn nx serve ods-api &
      - name: run cypress
        run: yarn nx e2e ods-e2e

      # - run: dotnet tool update -g dotnet-reportgenerator-globaltool
      #   continue-on-error: true
      # - name: Merge Test Coverage Results
      #   run: reportgenerator -reports:**/cobertura-coverage.xml -targetdir:./coverage/merged "-reporttypes:TextSummary;"
      #   continue-on-error: true
      - name: Upload artifacts
        uses: actions/upload-artifact@v3.1.1
        # Always run this, even if something fails
        if: always()
        with:
          name: cypress e2e
          path: ./dist/cypress/apps
          # path: ./coverage/merged # Directory containing files to upload
