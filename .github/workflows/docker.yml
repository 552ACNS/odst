name: docker

on:
  push:
    branches:
      - 'master'
      # - 'dev'
      - docker-recreate-images
  pull_request:
    branches:
      - 'master'
      - 'dev'

#TODO is there a way to test if image can be built based on PR code? without doing the whole pipeline. build to first stage w/o pushing?

env:
  REGISTRY: ghcr.io
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # - name: Set env DOCKER_BUILD_TARGET
      #   run: |
      #     if [[ $GITHUB_EVENT_NAME == 'push' ]]; then
      #         echo "NEED=true" >> "$GITHUB_ENV"
      #     else
      #         echo "NEED=false" >> "$GITHUB_ENV"
      #     fi

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - name: 'Install nx'
        run: npm i nx --ignore-scripts --legacy-peer-deps --progress=false --audit=false --loglevel=error

      #region on push: build and push images to registry
      - name: 'nx docker'
        run: npx nx affected --target=docker --push=true --target=deploy
        if: ${{ github.event_name != 'pull_request' }}
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'nx docker-migrate'
        run: npx nx affected --target=docker-migrate --push=true --target=deploy
        if: ${{ github.event_name != 'pull_request' }}
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #endregion

      #region on PR: only build to first stage
      - name: 'nx docker'
        run: npx nx affected --target=docker --target=build
        if: ${{ github.event_name == 'pull_request' }}
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'nx docker-migrate'
        run: npx nx affected --target=docker-migrate --target=build
        if: ${{ github.event_name == 'pull_request' }}
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #endregion
